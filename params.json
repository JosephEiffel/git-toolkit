{
  "name": "Git-toolkit",
  "tagline": "Git工具箱",
  "body": "# Git Utils\r\n\r\nGit工具集\r\n\r\n## 安装\r\n\r\n**使用curl**\r\n\r\n```bash\r\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/tonydeng/git-toolkit/master/installer.sh)\"\r\n```\r\n\r\n**使用wget**\r\n\r\n```bash\r\nsh -c \"$(wget https://raw.githubusercontent.com/tonydeng/git-toolkit/master/installer.sh -O -)\"\r\n```\r\n\r\n## 工具集介绍\r\n\r\n本工具集包含几个部分，自定义命令，Hook脚本，以及配置模板\r\n\r\n### 自定义命令\r\n\r\n#### git toolkit\r\n\r\n提供本工具集的管理命令。\r\n\r\n**查看帮助**\r\n\r\n```bash\r\ngit toolkit help\r\n```\r\n\r\n**卸载本工具集**\r\n```bash\r\ngit toolkit uninstall\r\n```\r\n\r\n#### git ci\r\n\r\n提供交互式`git commit`的命令，用于定制统一`commit message`\r\n\r\n```bash\r\ngit ci\r\n选择您正在提交的类型:\r\n        1. backlog: 开始一个新的backlog\r\n        2. feat: 新功能（feature）\r\n        3. fix: 修补bug\r\n        4. docs: 文档（documentation）\r\n        5. style: 格式（不影响代码运行的变动）\r\n        6. refactor: 重构（即不是新增功能，也不是修改bug的代码变动）\r\n        7. test: 增加测试\r\n        8. chore: 构建过程或辅助工具的变动\r\n        0. quit: 退出\r\n```    \r\n\r\n### Hook脚本\r\n\r\n#### commit-msg\r\n\r\n用于验证每次提交的`commit message`是否符合规范，如果不符合规范，则提交不成功\r\n\r\n### 配置\r\n\r\n#### git config --global commit.template\r\n\r\n配置统一的`commit message`模板\r\n\r\n#### git config --global core.hooksPath\r\n\r\n配置制定的Hook脚本的目录，使用本项目的git hook脚本\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}